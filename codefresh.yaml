version: '1.0'

mode: parallel

stages:
- Build & Test
- Push & Release

steps:
  main_clone:
    stage: Build & Test
    type: git-clone
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    git: ${{GIT_CONTEXT}}
    revision: ${{CF_REVISION}}

  calculate_version:
    stage: Build & Test
    title: 'Calculate latest version'
    image: alpine:3.8
    commands:
        - cf_export VERSION=$(cat VERSION)
    when:
      steps:
      - name: main_clone
        on:
        - success

  test:
    stage: Build & Test
    image: golang
    commands:
    - make test
    when:
      steps:
      - name: main_clone
        on:
        - success

  create_git_tag:
    title: Push tag to git
    image: codefreshio/ci-helpers
    stage: Push & Release
    commands:
    - source /get-token/get-gh-token.sh
    - cf_export GITHUB_TOKEN
    - export OLD_ORIGIN=$(git remote get-url origin)
    - git remote rm origin
    - git remote add origin https://${GITHUB_TOKEN}@github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}.git
    - git tag v${{VERSION}}
    - git push --tags
    - git remote rm origin
    - git remote add origin $OLD_ORIGIN

    fail_fast: false
    when:
      steps:
      - name: test
        on:
        - success
      branch:
        only:
        - master

  release_binaries:
    title: Create release in Github
    image: goreleaser/goreleaser
    stage: Push & Release
    fail_fast: false
    commands:
    - go mod download
    - goreleaser release -f goreleaser.yaml --rm-dist --skip-validate
    when:
      steps:
      - name: create_git_tag
        on:
        - finished
      branch:
        only:
        - master

  build:
    stage: build
    type: "alexcodefresh/test-docker" 
    retry:
      maxAttempts: 3
      delay: 5
      exponentialFactor: 2
    arguments:
      image_name: ${{IMAGE_NAME}}
      working_directory: '${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}'
      dockerfile: './Dockerfile'
      platforms: 
        - linux/amd64
        - linux/arm64
      registries:
        - name: 'quay.io'
          username: '${{QUAY_USERNAME}}'
          password: '${{QUAY_PASSWORD}}'
        - name: 'docker.io'
          username: '${{DOCKERHUB_USERNAME}}'
          password: '${{DOCKERHUB_PASSWORD}}'
        - name: 'gcr.io'
          path_prefix: codefresh-enterprise
          username: '${{GCR_USERNAME}}'
          password: '${{GCR_PASSWORD}}'
    when:
      steps:
        - name: test
          on:
          - success
    scale:
      master_branch_tags:
        when:
          branch:
            only: [ master ]
        arguments:
          tags:
            - ${{CF_BRANCH_TAG_NORMALIZED}}
            - ${{VERSION}}
            - latest
      dev_branches_tags:
        when:
          branch:
            ignore: [master]
        arguments:
          tags:
            - ${{CF_BRANCH_TAG_NORMALIZED}}